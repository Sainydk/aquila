package ru.prolib.aquila.core;

import java.util.LinkedHashMap;

/**
 * Интерфейс определяющий условия композитного события.
 * <p>
 * 2012-04-21<br>
 * $Id: CompositeEventRule.java 219 2012-05-20 12:16:45Z whirlwind $
 */
@Deprecated
public interface CompositeEventRule {

	/**
	 * Проверить новое событие.
	 * <p>
	 * Данный метод используется для проверки необходимости учета поступившего
	 * события и вызывается каждый раз при получении события одного из
	 * обслуживаемых типов. 
	 * <p>
	 * @param event поступившее событие
	 * @param state состояние на момент до поступления события
	 * @return true если событие следует учесть в состоянии
	 */
	public boolean testNewEvent(Event event,
								LinkedHashMap<EventType, Event> state);

	/**
	 * Проверить состояние.
	 * <p>
	 * Данный метод используется для определения момента генерации композитного
	 * события. Значения карты состояния соответствуют последним полученным
	 * событиям соответствующего типа или null, если с момента последнего
	 * сброса, событий соответствующего типа не поступало.
	 * <p>
	 * В случае, если данный метод сигнализирует о необходимости сгенерировать
	 * композитное событие, текущее состояние сбрасывается: соответствующие
	 * заданым типам события (значения карты) устанавливаются в null.
	 * <p>
	 * @param state текущее состояние
	 * @return true если следует сгенерировать композитное событие
	 */
	public boolean testNewState(LinkedHashMap<EventType, Event> state);

}