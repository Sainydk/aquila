package ru.prolib.aquila.core.indicator;

import ru.prolib.aquila.core.data.*;

/**
 * Интерфейс функции индикатора.
 * <p>
 * Предназначен для реализации индикаторов, расчет которых подразумевает
 * совместное использование двух рядов данных: исходного и ряда собственных
 * значений, расчитанных на предыдущих этапах. К таким индикаторам относятся
 * например Exponential Moving Average, которая использует предыдущее
 * значение для расчета последующего.
 * <p>
 * @param <T> тип значений исходного ряда
 * @param <R> тип результата
 */
public interface ComplexFunction<T, R> {
	
	/**
	 * Расчитать значение индикатора.
	 * <p>
	 * @param sourceSeries исходный ряд данных
	 * @param ownSeries собственный ряд, расчитанный на предыдущих итерациях.
	 * @param index индекс элемента исходного ряда. Если расчет связан с только
	 * что добавленным элементом исходного ряда, то индекс указывает на еще
	 * несуществующий элемент собственного ряда. Следует учитывать этот момент
	 * при реализации функций.
	 * @return значение индикатора
	 * @throws ValueException исключение расчета
	 */
	public R calculate(Series<T> sourceSeries, Series<R> ownSeries, int index)
		throws ValueException;
	
	/**
	 * Получить идентификатор функции по-умолчанию.
	 * <p>
	 * @return идентификатор по-умолчанию
	 */
	public String getDefaultId();

}
