Директива 20130706 
[[[[ О редизайне алгоритмических заявок ]]]]

Основание

Эксплуатационные тесты алгоритмических заявок (далее АЗ) текущей реализации
выявили серьезные недостатки используемой схемы, которые ставят под сомнение
целесообразность сохранения существующего дизайна модели АЗ. Схема, при которой
АЗ (стоп-лимит, etc...) представляются отдельными объектами бизнес-модели
(заявками особого типа), имеют собственное хранилище и при этом подразумевают
установку соответствия с алгоритмическими заявками в торговом терминале не
дает тех преимуществ, на которые был изначальный расчет.

В ходе выполненных работ были частично реализованы функции АЗ для терминалов
QUIK и IB. В результате работы не были завершены по различным причинам
технического характера. Выяснение причин дало повод для пересмотрения дизайна
АЗ.

Для рассмотренных терминалов в сравнении с методом, при котором контроль
соответствующих условий и подача заявки выполняется локально, АЗ выставленные
через терминал не дают преимущества в скорости, но при этом делают дизайн менее
прозрачным, а реализацию намного более сложной.
--------------------------------------------------------------------------------

Анализ интеграции с IB

Для IB АЗ и так выполняются локально. Такие заявки находятся в промежуточном
состоянии, пока заявка не будет отменена или локальный контроллер не определит
момент наступления соответствующего события, после которого лимитная или
рыночная заявка направляется в торговую систему. Полная реализация отображения
алгоритмических заявок IB терминала в локальную модель (текущего дизайна)
потребует значительного времени на разработку способа искусственного разделения
таких заявок на соответствующий экземпляр локальной стоп-заявки и, после подачи
поручения при срабатывании условия, сответствующий экземпляр биржевой заявки.

Как видно, бороться за скорость в данном случае смысла никакого нет, а дизайн
усложняется значительно. И все это потребует времени на реализацию.
--------------------------------------------------------------------------------

Анализ интеграции с QUIK

Для QUIK, на дизайн модели заявок которого был изначальный ориентир, проблема
иного характера. Данные из QUIK поступают по трем каналам: через интерфейс
TRANS2QUIK это реакция на отправку транзакции и реакция на события по заявкам
и сделкам, а так же экспорт таблиц через DDE. Так вот, практическая эксплуатация
показала, что задержка между передачей по этим каналам одних и тех же или
связанных данных различается на сотни миллисекунд, что недопустимо для обмена
между локальными приложениями.

При этом, данные различных элементов модели и данные по перечисленным каналам
поступают в хаотичном порядке. Это не позволяет выполнять обработку в момент
поступления данных и требует сложной процедуры согласования, которая накапливает
все описанные задержки.  

АЗ, выставленные через QUIK попадают на промежуточный сервер, который
контролирует их исполнение. Как реализован контроль исполнения не известно, но
имеется статистика, демонстрирующая негативную динамику: большая часть
(более 90%) выставленных стоп-заявок на открытии не успели вовремя подать
соответствующие поручения.

Некоторые технические проблемы, например такие как сопоставление порожденной
заявки экземпляру ее родительской стоп-заявки так и не удалось решить до сих
пор. Масса сложностей, связанных с оригинальной реализацией терминала QUIK,
выявляется по ходу работ из-за чего готовность системы ввода в эксплуатацию
постоянно откладывается.

Реализация адаптера данного терминала была связана с наибольшим количеством
сложностей. Практика показывает, что вложенные усилия не окупаются уже сейчас
и предъявляемые к конечной системе требования никогда не будут достигнуты.
--------------------------------------------------------------------------------

Подход

В связи с вышеописаным принято решение выполнить поэтапный редизайн заявок.
Редизайн направлен на сокращение процедур взаимодействия с торговым терминалом
и упрощение модели заявок, которое должно произойти в следствие сокращения
функций текущей модели заявки.

Этапы работ должны быть выполнены таким образом, что бы элементы старой модели
сохранялись до тех пор, пока не будет выполнен перевод на новую версию всех
существующих терминалов и стратегий. Устаревшие атрибуты и методы модели
должны быть отмечены тэгом @Deprecated. Это обеспечит видимость тех участков
кода, которые нуждаются в переработке.

--------------------------------------------------------------------------------

Новая модель

Новая модель предполагает полное отсутствие обособленного объекта АЗ как класса.
Вместо нее будет использоваться комбинация из обычной заявки (лимитной или
рыночной) и контроллера, реализующего алгоритм срабатывания подачи поручения.
Так как механизм выставления заявок остается практически неизменным, то в этом
плане изменений в конкретных терминалах не потребуется. Алгоритм контроля никак
не зависит от терминала и может быть реализован в рамках библиотеки
бизнес-модели.

--------------------------------------------------------------------------------

Порядок редизайна

см. тикет http://kobresia.acunote.com/projects/15260/tasks/1872

