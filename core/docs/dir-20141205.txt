Директива 20141205 
[[[[ О введении синхронных событий терминала ]]]]

Основание

В процессе разработки симулятора биржевой торговли, а также на основании более
ранних кейсов, выявлена необходимость организации синхронного взаимодействия
между терминалом и потребителями его услуг.

Для реализации большинства алгоритмов подходит механизм работы с асинхронными
событиями. Но в некоторых случаях наличие задержек между генерацией события
и его обработкой создает потенциальные проблемы. Например, попытка выставить
заявку через терминал, который отключен от удаленной системы приведет к
выбросу исключения. Можно проверять состояние терминала перед каждой заявкой,
но это неудобно и противоречит принципам хорошего дизайна. Наиболее корректным
здесь видится перевод автомата в состояние, из которого выставление заявок
гарантированно не выполняется. Однако, если делать это опираясь на асинхронные
события, то можно получить фантомную ошибку, возникающую с неопределенной
частотой и имеющую неопределенный генезис. Она будет возникать всякий раз, когда
необходимость выставить заявку будет возникать в промежутке между фактической
сменой статуса терминала и обработкой соответствующего события. Хотя, с точки
зрения подхода все будет выглядеть превосходно.

При разработке симулятора торгов, так же выявлена определенная сложность. В
общем виде, симуляция торгов это трансляция имеющихся исторических данных о
торгах в последовательность событий, которая максимально соответствует
последовательности событий, возникших в результате реальных торгов. Учитывая
известные объемы данных, наиболее рациональным подходом является трансляция не
всех доступных данных, а только тех, которые востребованы потребителями.

В соответствии с имеющейся моделью, потребители информируют терминал о
необходимых для работы инструментах посредством специального метода терминала
requestSecurity. Впервые необходимость в таком подходе возникла при работе с
терминалом IB, который для получения данных требует выполнять подписку для
каждого инструмента. В симуляторе аналогичный механизм позволяет определить,
какие данные необходимо транслировать в процессе симуляции.

Однако, здесь возникает проблема. Симулятор не может работать, если не запрошены
никакие данные, так как может выполнять симуляцию только на основе конкретных
данных. А потребитель не имеет возможности указать эти данные, пока терминал не
запущен в работу. Сейчас, самый ранний момент, когда потребитель может начать
работу, это реакция на OnStarted терминала. Однако, поскольку трансляция событий
происходит в асинхронном режиме, почти наверняка пуск терминала завершится
раньше, чем потребитель получит возможность вызвать какой-либо метод терминала.
Это будет особенно сильно проявляться в случае автоматического запуска
симуляции, когда пуск терминала и пуск симуляции будут выполнены друг-за-другом
последовательно в одном потоке.

Таким образом, использование только одного механизма асинхронных событий не
позволяет обеспечить приемлемую реализацию поставленных перед системой задач.
--------------------------------------------------------------------------------

Подход 

Для обеспечения возможности в синхронном режиме реагировать на переход терминала
из состояния в состояние, принято решение ввести дополнительную абстракцию
- обозреватель терминала. Потребители не обязательно должны реализовывать
методы обозревателя. Использование этого механизма является опциональным и
предыдущие разработки не потребуют внесения каких либо изменений.
--------------------------------------------------------------------------------

Изменения модели

Обозреватель терминала должен имплементировать интерфейс TerminalObserver. В
целях предельного упрощения, этот интерфейс определяет всего два метода:
один метод используется для информирования о доступности терминала, а другой
для информирования о недоступности терминала для выполнения запросов. Экземпляр
терминала может быть связан с любым количеством обозревателей. Специальные
методы терминала позволяют добавлять и удалять обозревателей из внутреннего
еестра в любое время.

В момент определения доступности терминала гарантируется, что терминал находится
в валидном состоянии. Например, в случае симулятора торгов стратегиям
гарантируется, что состояние позволяет использовать внутреннее время терминала
для определения рабочих инструментов с привязкой по времени (фьючерсов). Более
того, симулятор требует, что бы стратегия запрашивала инструменты в момент
готовности терминала. В противном случае, симуляция по стратегии будет
невозможна. В качестве другого примера можно привести терминал IB, который
таким образом сигнализирует о готовности трансляции в удаленную систему запросов
рыночных данных по инструментам.
