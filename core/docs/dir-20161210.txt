Директива 20161210
[[[[ Об изменении набора и порядка работы событий обозреваемого контейнера ]]]]

Основание

Практическое использование объектов на базе обозреваемого контейнера выявило
необходимость получения событий об изменениях данных даже в том случае, когда
контейнер еще не содержит достаточно минимальных данных для полноценной работы.
Очевидным примером является необходимость отслеживать обновления объектов
элементами UI, которые по сути не выполняют ничего, кроме отображения данных
контейнера. Отсутствие апдейтов не дает возможность актуализировать информацию
на экране, когда контейнер заполняется частично. С другой стороны, большинство
запросов на получение списка объектов, базирующихся на классе обозреваемого
контейнера, не учитывают статус доступности объекта и возвращают все объекты,
независимо от текущей доступности. Это делает бессмысленным замену первого
апдейта событием доступности контейнера и подавление апдейтов до того момента,
когда контейнер будет содержать минимальный набор данных.

Кроме этого, в процессе эксплуатации возник резонный вопрос, если финальное
состояние контейнера "закрыт", то как можно автоматически отследить наступление
этого факта. 

--------------------------------------------------------------------------------

Подход

Принято решение изменить порядок генерации событий обозреваемого контейнера
таким образом, что бы событие доступности не подавляло события изменения
содержимого. Те пользователи, которым для работы с контейнером важно наличие
минимального набора данных, при отлове апдейтов должны самостоятельно
удостовериться, что контейнер переведен в состояние доступности или маркировать
объект доступным для обработки только после получения события о доступности.
Кроме этого, в контейнер будет добавлен новый тип события, который позволит
отслеживать факт закрытия контейнера.

--------------------------------------------------------------------------------

Порядок редизайна

В интерфейс ObservableStateContainer добавить метод получения типа события
onClose. В метод ObservableStateContainer#close добавить новый тип события и
генерацию события onClose. Обозревателей и альтернативные типы не удалять.

Изменить метод ObservableStateContainer#update таким образом, что бы событие
onUpdate генерировалось каждый раз при наличии изменений, независимо от признака
доступности контейнера. Проверки состояния контейнера и генерацию события
доступности перенести после генерации события обновления.

Исправить контроллер заявки OrderImpl таким образом, что бы дополнительные
события не генерировались до момента доступности контейнера.

Добавить alternates для событий onClose заявки, инструмента, позиции и портфеля
в терминал. Добавить alternates для события закрытия позиции в портфель.

Подписчики и альтернативные типы, привязанные к событиям onClose контейнера
не должны быть очищены при закрытии объектов.
