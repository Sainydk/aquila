Директива 20151221
[[[[ О разделении модели терминала и источников данных ]]]]

Основание

Реализация терминалов на базе наследования базовой реализации терминала и
последующей реализации специфических механизмов доступа к источникам данных
внутри наследника не оправдала себя. При таком подходе сложно тестировать классы
верхнего уровня абстракции, так как они объединяют и базовую логику терминала, и
специфическую, сложность которой зависит от сложности удаленной системы.
Инстанцирование такого терминала связано с передачей большого числа аргументов,
состав которых специфичен от реализации к реализации. Жесткая привязка к
конкретным источникам данных в рамках одного экземпляра не позволяет
комбинировать источники данных для различных целей (например, эмуляция торгов на
базе реальных данных о торгах и эмулятора исполнения заявок).

--------------------------------------------------------------------------------

Подход

Принято решение обособить терминал в виде универсальной, независимой от
источников данных сущности и связать экземпляр терминала с поставщиками данных
путем использования дополнительного интерфейса. Таким образом, по отношению к
данным терминал будет выступать только инициатором запросов, а специфические
механизмы поставки данных будут скрыты за интерфейсом поставщика данных.

--------------------------------------------------------------------------------

Порядок редизайна

Все связанные объекты внедряются в момент инстанцирования посредством передачи
в конструктор объекта класса TerminalParams (бывший BasicTerminalParams).  Это
позволяет сохранить специфические реализации, и при этом не исключает
использование IoC контейнера для инстанцирования терминалов при сохранении
final на соответствующие атрибуты терминала. На переходный период такие
устаревшие сущности как стартер и контроллер терминала сохраняются, что бы
обеспечить работоспособность имеющихся реализаций терминалов. Однако, эти
атрибуты должны быть промаркированы как deprecated. После осуществления перехода
на новую схему работы необходимо избавиться от deprecated элементов. 

Добавить сеттеры параметров, что бы обеспечить возможность инициализации объекта
в рамках конфигурации IoC контейнера. Снабдить идентификатором терминала и
экземпляром провайдера данных. Добавить соответствующие геттеры.

Поскольку терминал больше не отвечает за инициализацию подсистем и подключение к
удаленным системам, сложная система состояний более не востребована. События
и состояния connected/disconnected и ready/unready должны быть удалены. Работу
started/stopped следует оставить как есть в целях упрощения процедуры перехода
для существующих реализаций, так и для сохранения некой точки входа в рабочий
цикл. Именно на эти события started/stopped пользователи терминала должны
назначать обработчики, инициирующие запросы данных.

После этого, можно перевести базовую реализацию метода requestSecurity терминала
на обращение к провайдеру данных. Поскольку финальная реализация терминала
теперь будет единственной, класс терминала следует переименовать в нечто более
соответствующее.
