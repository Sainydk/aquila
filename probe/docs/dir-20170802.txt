Директива 20170802 
[[[[ О внедрении механизма синхронизации потоков ]]]]

Основание

Планировщик PROBE работает быстрее, чем очередь успевает обрабатывать события.
На высокой скорости симуляции обработка событий отстает настолько сильно, что
видимость параллельной работы пропадает. Остальные системы начинают работать
с большим опозданием по отношению ко времени возникновения того или иного
события. В определенных режимах планировщик успевает дойти до точки останова,
прежде чем другие системы успевают запланировать задачи.

Данная проблема наблюдается в процессе симуляции тиковых данных L1.
Начало подачи таких данных определяется моментом доступности инструмента -
как только инструмент становится доступным, необходимо начать подачу L1
данных. Если в момент генерации этого события очередь перегружена, то в
момент, когда подойдет очередь соответствущего обработчика, планировщик успеет
продвинуться вперед по временной шкале так далеко, что это приведет к потере
части L1 данных из-за неправильного определения периода читаемых данных.
Ситуация усугубляется наличием медленных операций ввода-вывода в начале чтения
L1 данных. Дополнительным фактором замедления является то, что доступность
разных инструментов как правило совпадает во времени. Таким образом
одномоментно в системе возникает несколько медленных задач, которые по задумке
должны быть выполнены одномоментно относительно времени планировщика. Но в
результате каждая такая задача получает разное отклонение фактического момента
времени от желаемого.

Добавление механизма датирования событий решило проблему лишь частично.
Точность исполнения повысилась до ожидаемого уровня, но со стороны внешнего
наблюдателя процесс выглядит не равномерным. Наблюдатеся все та же проблема:
время планировщика успевает убежать вперед, прежде чем обработчики событий
успеют инициировать подачу данных и нагенерировать задачи планировщика. После
инициализации чтения, время планировщика замирает, а в списке запланированных
задач можно наблюдать задачи связанные с подачей L1 данных, которые
запланированы далеко в прошлом. При этом, текущее время планировщика остается
неизменным до тех пор, пока подача данных не дойдет до соответствующей позиции
на временной шкале. В совокупности это выглядит как подвисание системы, хотя
никакого зависания нет - все работает как предусмотрено, планировщик
последовательно исполняет наиболее ранние задачи, не изменяя при этом точку
актуальности.


--------------------------------------------------------------------------------

Подход 

Для выравнивания скорости работы параллельных потоков с потоком планировщика,
предлагается дополнить планировщик PROBE механизмом синхронизации. Специфические
реализации синхронизаторов сами определяют критичность отставания,
имплементируют интерфейс синхронизатора, который используется планировщиком
PROBE для сигнализации и ожидания на соответствующих этапах работы. Таким
образом будет достигнута видимость параллельной работы различных потоков,
независимо от скорости планировщика и фактической нагрузки на отдельный поток.


--------------------------------------------------------------------------------

Порядок редизайна

Объявить новый интерфейс ThreadSynchronizer в котором предусмотреть методы
индикации начала и окончания обработки временного слота, а также метод ожидания
контролируемого потока.

Объект состояния планировщика расширить списком синхронизаторов.
Имплементировать в классе состояния планировщика интерфейс ThreadSynchronizer,
методы которого делегируют соответствующие вызовы каждому зарегистрированному
синхронизатору.

Реализацию планировщика расширить методами добавления и удаления синхронизаторов
с делегированием объекту состояния.
 
