v1 (ред. 2014-06-10-001)

Эмулятор фьючерсов - минимально-необходимый набор компонентов, позволяющий
стандартным способом инстанцировать терминал, настраивать и выполнять эмуляцию
работы торгового терминала на основе потока сделок. Результатом должна стать
такая реализация терминала, которая позволит выполнять тестовый прогон
имеющейся стратегии dts5atr.

* Настройки терминала: добавление/редактирование портфелей, выбор РП, кнопки
запуска/паузы/останова/шага процесса эмуляции.

* Хранилище тиковых данных. Требуется в двух видах: потоковом и с позицированием
по временной метке. 

* Эмулятор инструмента - по запросу инструмента выполняет поиск и, в случае
доступности котировок внутри РП, регистрацию инструмента в терминале. Выполняет
трансляцию сделок в процессе эмуляции???
	
* Эмулятор портфеля FORTS - в процессе эмуляции выполняет расчет параметров
открытых позиции, суммирование вариационной маржи по позициям, клиринг.

* Эмулятор исполнения заявок.

--------------------------------------------------------------------------------
Возможно, здесь имеет смысл более тесно с эмулятором инструмента, так как
при клиринге необходимо менять некоторые параметры инструмента. Либо вводить
обработчики для инструментов. Лучше всего, вообще отдельно клиринг делать
для целей портфеля и атрибутов инструмента. 
-------------------------------------------------------------------------------- 

1) Ридер сделок на базе отдельного файла котировок;
2) Ридер сделок на базе набора файлов котировок;
3) Придумать как ридер сделок конвертировать в событие хронологии;
4) requestSecurity терминала регистрирует источник событий (объект из п.3) при
   наличии инструмента;
   
   2014-09-30
   Проблема: Спихивание задачи по определению опорных данных на пользователей
   терминала через использование requestSecurity не представляется эффективным
   решением.
   1) Если предположить, что requestSecurity должна вызываться стратегией
   в момент встречи с терминалом до его запуска, не факт, что терминал будет
   в валидном состоянии. Конкретно для probe в этот момент не будет доступен
   валидный РП, так как обычно он будет установлен через UI позже, уже после
   создания всех необходимых объектов. Не имея доступа к ТА терминала,
   стратегия не сможет выполнить например определение текущего фьючерса. 
   2) Если предположить, что requestSecurity должна вызываться в момент
   обработки события OnStarted терминала, то проблема может быть решена путем
   добавления контрольного наблюдателя в конец очереди. Однако в данном случае
   алгоритм будет опираться на предположение, что наблюдатели получают
   уведомления в той последовательности, в которой они были зарегистрированы.
   Однако, гарантировать это нельзя - событийная система не имеет никаких
   установок на этот счет.
   3) Есть идея регистрировать некие клиентские хендлеры, которые терминал
   сможет синхронно дернуть в наиболее подходящий момент. Некоторые события
   можно продублировать в этих обработчиках. Очевидный минус такого подхода
   заключается в наличии потенциальных проблем в случае некорректной реализации
   обработчика. Например, обработчик может осуществить блокирующий вызов и
   повесить всю работу. Однако на фоне того, что с таким же успехом любой
   обозреватель может подвесить таким же образом поток диспетчеризации событий и
   все опять-же встанет колом, данный варинт выглядит вполне приемлимым.
   
   2014-10-08
   Тест-План функциональный тест терминала-эмулятора по фьючам FORTS.
   *) Планировщик в составе терминала работает; Время при срабатывании задачи
   гарантированно не меньше установленного для задачи.
   *) Приводит к генерации сделок по инструменту;
   *) Изменяет атрибуты инструмента HighPrice, LastPrice,
   LastTrade, LowPrice, OpenPrice, ClosePrice, DisplayName, 
   *) По вечернему клирингу пересчитываются атрибуты инструмента MaxPrice,
   MinPrice (а как упор в планки разруливать?), MinStepPrice.
   *) Системные события...
   *) Портфель и позы...
   *) Заявки...
   *) PROFIT
 