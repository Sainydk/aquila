Данный документ раскрывает архитектуру эмулятора торгового терминала.

Под минимальной единицей измерения времени подразумевается миллисекунды.

Термины

Точка актуальности (далее ТА) - временная метка, указывающая на текущее
положение эмулятора (состояние терминала) на временной шкале.

Рабочий период (РП) - это временной промежуток, в рамках которого выполняется
эмуляция работы терминала. Начало этого периода определяет ТА на начало работы.
Поступление данных, датированных временем большим чем время окончания РП,
служит сигналом к завершению работы.

Событие - любая произвольная датированная процедура. С точки зрения архитектуры,
событие является базовой рабочей единицей, которая обязательно характеризуется
временем и и может быть исполнена (применена) по запросу эмулятора. Примером
события может служить эмуляция обезличенной сделки, которая в реальной работе
транслируется биржей. Такое событие датируется временем сделки, а вызов
процедуры приводит к генерации входных данных.

Источник событий (ИС) - это любая подсистема, обеспечивающая последовательный
доступ эмулятора к событиям специфического типа. Последовательные события могут
быть датированы одинаковым временем (что позволяет работать с точностью менее
миллисекунды), но последовательная выдача события датированного более ранним
временем должна быть исключена. В качестве примера ИС можно привести механизм
преобразования сохраненных в файле тиковых данных. Системный планировщик,
являющийся неотъемлимой частью эмулятора терминала, так же представляет собой
источник событий.

Временной слот (далее слот) - хранилище событий, соответствующих временной
метке. Временной слот существует в двух состояниях: фазе накопления событий
и в состоянии "исполнено". Временной слот не может существовать обособленно.
Первое событие, датированное новым временем, образует новый временной слот.
Последующие события с таким же временем добавляются в существующий слот.
На этапе исполнения, события слота исполняются в порядке их добавления в слот.

Очередь - локальная последовательность слотов. Источники событий не
синхронизированы по времени между собой. Ситуация, когда в момент полной сборки
слота один источник возвращает событие датированное ТА, а другой источник
возвращает более позднее событие является нормальной. Будущие события
размещаются на временной шкале в новых слотах, а источник событий, выдавший
будущее событие, игнорируется до перехода к обработке соответствующего слота.

Диспетчер событий (далее диспетчер) является управляющим процесса. Цикл работы
диспетчера состоит из двух этапов: сборки очередного слота и исполнения событий
этого слота. Попутно с выполнением первого этапа могут формироваться более
поздние слоты. Так же на первом этапе ИС, выдавшие более поздние события,
временно исключаются из работы с сохоранением события в соответствующем слоте.
Условием завершение первого этапа является временное исключение всех ИС. После
чего, все события ближайшего (раннего) по времени слота выполняются диспетчером,
слот удаляется, а ТА переводится на следующий слот, если таковой имеется, либо
на следующую за исполненным слотом миллисекунду. Условием завершения работы
является прекращение поступление событий от всех имеющихся ИС или достижения ТА
равного времени окончания РП.

TODO: Подумать, а оно нужно вообще? Можно как то попроще.
Что касается исключения источников из очередного этапа сборки слотов. Доступ к
ИС должен обеспечиваться через отдельный реестр, который будет способен вернуть
список ИС для определенной временной метки. Так же в этом реестре должны быть
методы для маркировки ИС исключенным до указанной временной метки. 


